name: WordPress Theme Check

on:
  pull_request:
    types: [opened, labeled, synchronize]

jobs:
  theme-check:
    if: startsWith(github.event.label.name, 'New Theme')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get added folder
      id: get_folder
      run: |
        ADDED_FOLDER=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep '/' | cut -d'/' -f1 | uniq)
        echo "THEME_FOLDER=$ADDED_FOLDER" >> $GITHUB_ENV
        echo "Added folder: $ADDED_FOLDER"

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'

    - name: Install WordPress
      run: |
        wget https://wordpress.org/latest.tar.gz
        tar -xzf latest.tar.gz
        mv wordpress /tmp/wordpress

    - name: Set up WordPress configuration
      run: |
        cd /tmp/wordpress
        cp wp-config-sample.php wp-config.php
        sed -i 's/database_name_here/wordpress/' wp-config.php
        sed -i 's/username_here/root/' wp-config.php
        sed -i 's/password_here/root/' wp-config.php

    - name: Set up MySQL
      run: |
        sudo systemctl start mysql
        mysql -e 'CREATE DATABASE wordpress;' -uroot -proot

    - name: Install and activate theme
      run: |
        cp -R ${{ github.workspace }}/${{ env.THEME_FOLDER }} /tmp/wordpress/wp-content/themes/
        cd /tmp/wordpress
        wp core install --url=http://localhost --title=Test --admin_user=admin --admin_password=password --admin_email=admin@example.com --allow-root
        wp theme activate ${{ env.THEME_FOLDER }} --allow-root

    - name: Install and activate Theme Check plugin
      run: |
        cd /tmp/wordpress
        wp plugin install theme-check --activate --allow-root

    - name: Run Theme Check
      id: theme_check
      run: |
        cd /tmp/wordpress
        THEME_CHECK_RESULT=$(wp theme check ${{ env.THEME_FOLDER }} --format=json --allow-root)
        echo "THEME_CHECK_RESULT<<EOF" >> $GITHUB_ENV
        echo "$THEME_CHECK_RESULT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Comment PR
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const themeCheckResult = process.env.THEME_CHECK_RESULT;
          const parsedResult = JSON.parse(themeCheckResult);
          
          let comment = `## Theme Check Results for ${process.env.THEME_FOLDER}\n\n`;
          
          for (const check of parsedResult) {
            comment += `### ${check.name}\n`;
            comment += `**Type:** ${check.type}\n`;
            comment += `**Description:** ${check.description}\n\n`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });